!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=$/;"	m
Darray_free	vector.c	/^void Darray_free(int_Darray *arr){$/;"	f	typeref:typename:void
INIT_LENGTH	vector.h	/^#define INIT_LENGTH /;"	d
MAX_SIZE	vector.h	/^#define MAX_SIZE /;"	d
OUT	Makefile	/^OUT=vector$/;"	m
RM	Makefile	/^RM=rm -rf$/;"	m
__anonb025fbee0108	vector.h	/^typedef struct {$/;"	s
array	vector.h	/^    int *array;$/;"	m	struct:__anonb025fbee0108	typeref:typename:int *
capacity	vector.h	/^    int capacity;$/;"	m	struct:__anonb025fbee0108	typeref:typename:int
clean	Makefile	/^clean: $/;"	t
delete	vector.c	/^void delete(int_Darray *arr, int index){$/;"	f	typeref:typename:void
get	vector.c	/^int get(const int_Darray *arr, int index){$/;"	f	typeref:typename:int
init_Darray	vector.c	/^void init_Darray(int_Darray *array){$/;"	f	typeref:typename:void
int_Darray	vector.h	/^} int_Darray;$/;"	t	typeref:struct:__anonb025fbee0108
is_empty	vector.c	/^bool is_empty(const int_Darray *arr){$/;"	f	typeref:typename:bool
main	main.c	/^main()$/;"	f	typeref:typename:int
main.o	Makefile	/^main.o: main.c$/;"	t
print	vector.c	/^void print(int_Darray *arr){$/;"	f	typeref:typename:void
push_back	vector.c	/^void push_back(int_Darray *arr, int val){$/;"	f	typeref:typename:void
resize	vector.c	/^void resize(int_Darray *array, int new_capacity){$/;"	f	typeref:typename:void
set	vector.c	/^void set(int_Darray *arr, int index, int val){$/;"	f	typeref:typename:void
shrink_to_fit	vector.c	/^void shrink_to_fit(int_Darray *arr){$/;"	f	typeref:typename:void
size	vector.c	/^int size(const int_Darray *array){$/;"	f	typeref:typename:int
size	vector.h	/^    int size;$/;"	m	struct:__anonb025fbee0108	typeref:typename:int
vector	Makefile	/^vector: main.o vector.o$/;"	t
vector.o	Makefile	/^vector.o: vector.c$/;"	t
